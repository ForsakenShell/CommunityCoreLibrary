<?xml version="1.0" encoding="utf-8" ?>
<Defs>

    <!--
    
    Namespace:  CommunityCoreLibrary
    
    ThingClass: Building_FoodSynthesizer
    
    Requires:   CompHopperUser
    
    tickerType: Normal* or Rare
    
    Optional:   PlaceWorker_HopperMagnifier
    
    This is the building class is similar in function to the vanilla nutrient paste dispenser except that
    it will create any ingestible item from a list of provided recipes.  The synthesizer is already tied
    into the core games food system so pawns will automatically take the best ingestible available for the
    class of ingestible they are searching for using preferability for meals and joy for alcohol when binging
    or social relaxation.  This is of course limited to having the required recipe ingredients available in
    the hoppers attached to the building.  ie, if a building can produce simple and fine meals but there is
    only the ingredients available for simple meals, only simple meals will be available.
    
    Recipes can be added or removed from the building via research and ticking is required to check for
    changes in the available recipes.  Recipes should have a single product output (one item which
    produces one ingestible) and an error will be thrown if a recipe is detected which does not produce an
    ingestible, produces more than one product or produces more than one of the product.
    
    Ticking can be normal or rare, however, normal ticking will be more responsive*.  Unless needed by a
    comp (such as CompPowerLowIdleDraw), rare ticking is recommended.
    
    Recipes used with this building don't use the workers skills and don't need any tags relating to them.
    The only recipe tags which are relevant are as follows:
        defName
        label
        description**
        jobString***
        allowMixingIngredients
        ingredients
        fixedIngredientFilter
        defaultIngredientFilter
        products
        workAmount
    
    * Normal ticking checks happens once every 60 ticks.
    ** Recipe description is only visible in the help menu.
    *** Recipe jobString is currently not displayed but should be included for future implementation
    
    Usage:      For an example on how to use this building, see /Examples/ThingClasses/Food Synthesizer
    
    -->

</Defs>