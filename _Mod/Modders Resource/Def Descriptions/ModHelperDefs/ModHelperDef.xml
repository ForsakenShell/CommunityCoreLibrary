<?xml version="1.0" encoding="utf-8" ?>
<Defs>

    <!--

    <ModHelperDef>

        <defName>string</defName>       [required] This must uniquely identify your def

        <ModName>string</ModName>       [required] Name of your mod

        <minCCLVersion>version</minCCLVersion>
                                        [required] Minimum version of CCL required

        <Verbosity>enum*</Verbosity>    [optional] Sets the level of logging output CCL will perform when performing tasks specific to your mod

        <ModConfigurationMenus>         [optional] List of Mod Configuration Menus (MCM) for mod
            <li>
                <label>string</label>   [required] Name** to be displayed in the Mod Options menu
                <mcmClass>ModConfigurationMenu</mcmClass>
                                        [required] Class name of Mod Configuration Menu
            </li>
        </ModConfigurationMenus>

        < -- Engine Level Injectors -- >

        <SpecialInjectors>              [optional] Class names of SpecialInjectors to execute after mod validation and before any other injection
            <li>SpecialInjector</li>
        </SpecialInjectors>

        <ThingComps>                    [optional] List of ThingComps to inject
            <li>
                <requiredMod>string</requiredMod>
                                        [optional] Name of required mod to perform this injection

                                        <compProps>             [required] Property of ThingComp to inject

                    <compClass>ThingComp</compClass>
                    ...

                </compProps>
                <targetDefs>            [required] List of ThingDefs to inject ThingComp into
                    <li>ThingDef</li>
                </targetDefs>

            </li>
        </ThingComps>

        <tickerSwitcher>                [optional] List of ticker types to override on ThingDefs
            <li>
                <requiredMod>string</requiredMod>
                                        [optional] Name of required mod to perform this injection
                                        
                <tickerType>TickerType</tickerType>
                                        [required] New ticker type to override on ThingDefs
                <targetDefs>            [required] List of ThingDefs to override tickerType
                    <li>ThingDef</li>
                </targetDefs>
            </li>
        </tickerSwitcher>

        <Facilities>                    [optional] List of facilities (buildings with CompFacility) to inject into buildings with CompAffectedByFacilities
            <li>
                <requiredMod>string</requiredMod>
                                        [optional] Name of required mod to perform this injection
                                        
                <facility>ThingDef</facility>
                                        [required] Facility to inject into buildings
                <targetDefs>
                    <li>ThingDef</li>   [required] Building to inject facility into
                </targetDefs>
            </li>
        </Facilities>

        <TraderKinds>                   [optional] List of StockGenerators to inject into TraderKindDefs
            <li>
                <requiredMod>string</requiredMod>
                                        [optional] Name of required mod to perform this injection
                                        
                <targetDef>TraderKindDef</targetDef>
                                        [required] Trader to inject StockGenerator into
                <stockGenerators>
                    <li>StockGenerator</li>
                                        [required] StockGenerator to inject into trader
                </stockGenerators>
            </li>
        </TraderKinds>

        <ThingDefAvailability>          [optional] List of override values to set on ThingDefs (primarily used to enable or disable ThingDefs)

            <li>
                <requiredMod>string</requiredMod>
                                        [optional] Name of required mod to perform this injection
                                        
                <menuHidden>bool</menuHidden>
                                        [optional] If set, will update ThingDef.menuHidden with the new value
                                        
                <designationCategory>DesignationCategoryDef</designationCategory>
                                        [optional] If set, will update ThingDef.designationCategory and move the designator to the new category

                <researchPrerequisites> [optional] If set, will update ThingDef.researchPrerequisites.  If an empty list is
                    <li>ResearchProjectDef</li>    provided (as opposed to no list at all), the researchPrerequisites of the
                </researchPrerequisites>           ThingDef will be cleared.

                <targetDefs>
                    <li>ThingDef</li>   [required] ThingDefs to set the new values on
                </targetDefs>
            </li>

        </ThingDefAvailability>

        < -- Game Level Injectors -- >

        <PostLoadInjectors>             [optional] Class names of SpecialInjectors to execute after starting a new game or loading save games
            <li>SpecialInjector</li>
        </PostLoadInjectors>

        <MapComponents>                 [optional] Class names of MapComponents to inject into save games
            <li>MapComponent</li>
        </MapComponents>

        <Designators>                   [optional] List of Designators to inject Designation Categories
            <li>
                <designatorClass>Designator</designatorClass>
                                        [required] Class name of Designator to inject

                <designationCategoryDef>DesignationCategoryDef<designationCategoryDef>
                                        [required] Designation Category to inject designator into
                <designatorNextTo>Designator</designatorNextTo>
                                        [optional] Class name of Designator to inject beside (immediately after)

            </li>
        </Designators>

    </ModHelperDef>

    The order which the tags are listed in this file are the order in which they are processed.  Even if you move your tag
    blocks around in the file (ie, Designators appears first, it will still be processed last).

    * Verbosity is an enumeration and works with named levels, each level adds more and more information to the output log.
    Each level of verbosity includes the information of all the levels above it.
    The user release build only supports FatalErrors, NonFatalErrors and Validation.
    The modders release supports the following:
        FatalErrors
        NonFatalErrors
        Validation
        Warnings
        Injections
        AutoGenCreation
        StateChanges
        Stack (Use with caution, this will trace certain methods and some methods are recursive)
    
    For the user release the default verbosity is "Validation", and;
    The modders release the default verbosity is "Injections."

    While the user release will not report anything higher than validation, you should still remove (or comment) the xml tag
    for verbosity before releasing your mod.  The higher levels of verbosity will help track down bugs in both your mod and
    potentially within CCL itself for reporting to the github issues tracker.

    ** The label for the MCM is also used as the save key for the mod data.  Mod data is stored in the same directory as the
    core games configuration files.  It will be called "MCM_Data_[keyName].xml" where keyName is the label with spaces replaced
    with underscores.

    NOTE:  Only create one ModHelperDef for your mod, if more than one is found then an error will be thrown and any advanced
    functionality requiring information contained within the ModHelperDef (such as injections, AdvancedResearchDefs, etc) will be
    disabled.

    -->

</Defs>
