<?xml version="1.0" encoding="utf-8" ?>
<Defs>

    <!--

    <CommunityCoreLibrary.ModHelperDef>

        <defName>string</defName>       [required] This must uniquely identify your def

        <ModName>string</ModName>       [required] Name of your mod

        <minCCLVersion>version</minCCLVersion>
                                        [required] Minimum version of CCL required.  Format is Major.Minor.Revision.BugFix  Only specify the major, minor and revision, the bugfix number is ignored when CCL does version checks (ie, 0.14.0.1 is treated as 0.14.0).  New alpha releases will increment the minor version, new CCL features will increment the revision in an alpha, and CCL bugfixes will increment the bugfix component in a CCL revision.  The major component will not change until RimWorld itself released at 1.0.

        <Verbosity>enum*</Verbosity>    [optional] Sets the level of logging output CCL will perform when performing tasks specific to your mod

        <ModConfigurationMenus>         [optional] List of Mod Configuration Menus (MCM) for mod
            <li>
                <label>string</label>   [required] Name** to be displayed in the Mod Options menu
                <saveKey>string</saveKey> [optiona, recommended] xml node key** for saving MCM data under
                <mcmClass>ModConfigurationMenu</mcmClass>
                                        [required] Class name of Mod Configuration Menu
                <preload>bool</preload> [optional] If set to true, this MCM will be loaded before the injection sequence starts (before SpecialInjectors are injected).  Normal behaviour is that MCMs are loaded after the injection sequence (after all injectors are complete).
            </li>
        </ModConfigurationMenus>

        < -- Sequenced Injectors -- >

        <SequencedInjectionSets>        [optional***] Sequenced injection sets
            <li>SequencedInjectionSet</li>
        </SequencedInjectionSets>

    </CommunityCoreLibrary.ModHelperDef>

    The order which the tags are listed in this file are the order in which they are processed.  Even if you move your tag
    blocks around in the file (ie, Designators appears first, it will still be processed last).

    * Verbosity is an enumeration and works with named levels, each level adds more and more information to the output log.
    Each level of verbosity includes the information of all the levels above it.
    The user release build only supports FatalErrors, NonFatalErrors and Validation.
    The modders release supports the following:
        FatalErrors
        NonFatalErrors
        Validation
        Warnings
        Injections
        AutoGenCreation
        StateChanges
        Stack (Use with caution, this will trace certain methods and some methods are recursive)
    
    For the user release the default verbosity is "Validation", and;
    The modders release the default verbosity is "Injections."

    While the user release will not report anything higher than validation, you should still remove (or comment) the xml tag
    for verbosity before releasing your mod.  The higher levels of verbosity will help track down bugs in both your mod and
    potentially within CCL itself for reporting to the github issues tracker.

    ** The label for the MCM is also used as the save key for the mod data.  Mod data is stored in the same directory as the
    core games configuration files.  It will be called "MCM_Data_[keyName].xml" where keyName is the label with spaces replaced
    with underscores.  If an actual saveKey is provided, this will be used instead.  This is useful if your label contains
    invalid characters for an xml key (such as ampersand).

    NOTE:  Only create one ModHelperDef for your mod, if more than one is found then an error will be thrown and any advanced
    functionality requiring information contained within the ModHelperDef (such as injections, AdvancedResearchDefs, etc) will be
    disabled.

    *** See SequencedInjectionSet.xml and the individual sequenced injection set support files for details of each injector.

    -->

</Defs>