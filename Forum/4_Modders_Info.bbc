[size=12pt][color=orange]Modding Features[/color][/size]

[size=10pt]Remember to always refer to /Def Descriptions/ and /Examples/ for specific details about the xml involved.  C# features will require looking at the CCL source.  If you find something isn't covered that you feel should be, please give us feedback to help improve the documentation.[/size]


[size=10pt][color=orange]New Defs[/color] (xml)[/size]
[list]
[li][color=orange]Advanced Research[/color] - Allows recipes and buildings to be locked and unlocked by multiple research requirements.[/li]
[li][color=orange]Backstory[/color] - Def to add new backstories for pawns.[/li]
[li][color=orange]Help [Category][/color] - Define in-game help which is accessible from the main tab beside research (by default).[/li]
[li][color=orange]Main Menu[/color] - These defs define and control the main menu buttons.[/li]
[li][color=orange]Mini Map[/color] - Mini map defs define mini map categories and have overlays which draw specific data.[/li]
[li][color=orange]Mini Map Overlay[/color] - This is the work-horse of the mini map framework.  These do the actual drawing of the mini map itself.  Each one has it's own unique texture to draw to and the final results of all visible overlays from all mini maps are composited to the mini map window.[/li]
[li][color=orange]Mod Helper[/color][sup][size=8pt]4.1[/size][/sup] - Define mod friendly injectors and minimum CCL version dependency.[/li]
[li][color=orange]Name[/color] - Def to add new first, last and nicknames for pawns.[/li]
[li][color=orange]Outfit[/color] - Add new outfits with a simple def instead of having to write C# code to inject them.[/li]
[li][color=orange]Pawn Bio[/color] - Def to add new pawn biographies.[/li]
[/list]

[size=10pt][color=orange]Def Extensions[/color] (xml)[/size]
[list][li][color=orange]Terrain With Comps[/color] - Allows usage of special place workers with terrain.[/li][/list]

[size=10pt][color=orange]New Buildings[/color] (xml)[/size]
[list]
[li][color=orange]Automated Factory[/color] - This building class is similar to work table in that it has associated recipes and produces goods however, it will produce goods on it's own without a pawn to work it[sup][size=8pt]4.2[/size][/sup].[/li]
[li][color=orange]Hopper[/color] - A powerful generic hopper system which allows a hopper to be programmed with the items the machine (user) accepts and wants.  This is the base building for hoppers.  CCL provides two hoppers already (refrigerated and unrefrigerated).[/li]
[li][color=orange]SunLamp Heat Controller[/color] - It's a sun lamp, it's a heater, it's controllable.[/li][/list]

[size=10pt][color=orange]New Comp Properties[/color] (xml)[/size]
[list]
[li][color=orange]Automated Factory[/color] - The operational mode and output vector for automated factories.[/li]
[li][color=orange]Colored Lights[/color] - Used to define the available colors and research requirement for CompColoredLight.[/li]
[li][color=orange]Hide Item[/color] - Control flags for CompHideItem.[/li]
[li][color=orange]Hopper User[/color] - XML definition of resource thing filter for hopper storage.[/li]
[li][color=orange]Low Idle Draw[/color] - Defines the settings for how CompPowerLowIdleDraw modifies the power usage of the building.[/li]
[li][color=orange]Milkable Renameable[/color] - Allows you to specify the string which will show up for milkable animals instead of the default "milk fullness."[/li]
[li][color=orange]Restricted Placement[/color] - Defines the restrictions for place workers.[/li]
[li][color=orange]Shearable Renameable[/color] - Allows you to specify the string which will show up for shearable animals instead of the default "wool growth."[/li]
[/list]

[size=10pt][color=orange]New Interfaces[/color] (C#)[/size]
[list]
[li][color=orange]IConfigurable[/color] - Only applicable to MiniMap and MiniMapOverlay, this interface allows linking into the Minimap MCM and exposing persistent data.[/li]
[li][color=orange]IHelpDefView[/color] - Applicable only to window classes, this interface is used to handle window interactions with HelpDefs.[/li]
[li][color=orange]IHopperUser[/color] - A programmatic interface for programming hoppers.  This allows for more powerful programming of a hoppers resource filter.[/li]
[/list]

[size=10pt][color=orange]Helper classes[/color] (C#)[/size]
[list][li][color=orange]ColorPicker[/color] - A color picker dialogue and supporting helper functions. Allow users to select colors with a full HSV/alpha color picker.[/li]
[li][color=orange]Detours[/color] - Helper method to facilitate detouring [i]all[/i][sup][size=8pt]4.3[/size][/sup] calls to any (including core) function to another function.[/li]
[li][color=orange]Inter Mod Communication[/color] - Allows mods to register a callback to handle messages when sent as well as send messages.  This enables mods to communicate without explicitly depending on each other.[/li]
[/list]

[size=10pt][color=orange]New ITabs[/color] (xml)[/size]
[list]
[li][color=orange]ITab_AutomatedFactory[/color] - This is an optional ITab for automated factories to allow the user to enable or disable individual recipes.[/li]
[/list]

[size=10pt][color=orange]New ThingComps[/color] (xml)[/size]
[list]
[li][color=orange]Automated Factory[/color] - This is used to house the production mode and output vector for Building_AutomatedFactory.[/li]
[li][color=orange]Colored Lights[/color] - One building can have multiple glower colors defined (or it can use the default internal list of seven colors) and a button will be made available to the user to cycle through the options. The cycle button is hidden until the appropriate research is complete (by default "ColoredLights").  Additionally can program [i]other[/i] lights colors, respecting their own research.  Uses color matching by name so your "red" and my "red" don't have to be the same red but are accepted as "red."[/li]
[li][color=orange]Glower Toggleable[/color] [size=8pt](internal)[/size] - Allows the glower to be toggled by program code (C#).  This comp will replace CompGlower automatically and does not need to be implemented directly.[/li]
[li][color=orange]Hide Item[/color] - Hide stored items for storage buildings that represent containers rather than racks.  Functionally, this disables rendering of the item and it's label.  Can optionally prevent players from selecting the items in the building.[/li]
[li][color=orange]Hopper[/color] - Used as part of the generic hopper system.  Provides hopper-side functions.[/li]
[li][color=orange]Hopper User[/color] - Used as part of the generic hopper system.  Provides user-side functions.[/li][li][color=orange]Lifespan Powered[/color] - The same function as CompLifespan but, this will only count-down it's life while it is actively powered.[/li]
[li][color=orange]Neighbourly Grower[/color] - Adds gizmo's to Building_PlantGrower derived buildings (such as Hydroponics) providing the user the ability to share growing information.[/li]
[li][color=orange]Milkable Renameable[/color] - Specify the inspection string name for the resource gathered by milking.[/li]
[li][color=orange]Power Low Idle Draw[/color] - Allows anything[sup][size=8pt]4.4[/size][/sup] with a CompPowerTrader to draw less depending on it's operational mode.  Current operational modes include "InUse", "WhenNear", "GroupUse", "Cycle" and "Factory".[/li]
[li][color=orange]Refrigeration[/color] - Flags any Building_Storage as preventing foods from rotting.  If CompPowerTrader is present, the food will rot if the power is disconnected or the building is turned off.[/li]
[li][color=orange]Restricted Placement[/color] - Used to store settings for restricted place workers.[/li]
[li][color=orange]Shearable Renameable[/color] - Specify the inspection string name for the resource gathered by shearing.[/li]
[/list]

[size=10pt][color=orange]New PlaceWorkers[/color] (xml)[/size]
[list]
[li][color=orange]Hopper Magnifier[/color] - This will highlight hoppers which will connect to a building when in blueprint placement mode.[/li]
[li][color=orange]Hopper User Magnifier[/color] - This will highlight buildings requiring hoppers which will connect to a hopper when in blueprint placement mode.[/li]
[li][color=orange]Not On Terrain/Only On Terrain[/color][sup][size=8pt]4.5[/size][/sup] - Restricts placement to a list of valid terrain.  Can be used to reject (Not) or accept (Only).[/li]
[li][color=orange]Not On Thing/Only On Thing[/color][sup][size=8pt]4.5[/size][/sup] - Restricts placement to a list of valid things.  Can be used to reject (Not) or accept (Only[sup][size=8pt]4.6, 4.7[/size][/sup]).[/li]
[li][color=orange]Only On Surface[/color][sup][size=8pt]4.5, 4.7[/size][/sup] - Only on an item surface.  Useful for things which would be "on" something but not so specific as to the thing it's on.[/li]
[li][color=orange]Only Under Roof[/color][sup][size=8pt]4.5, 4.7[/size][/sup] - Require that a roof exist in the cell.[/li]
[li][color=orange]Restricted Count[/color][sup][size=8pt]4.5[/size][/sup] - Restrict the amount of buildings of a given type in the world.[/li]
[li][color=orange]Wall Attachment[/color][sup][size=8pt]4.5, 4.7[/size][/sup] - Requires a supporting wall (natural or man-made) to build against.  If you want to build something in the same cell as a wall, use OnlyOnThing instead.[/li]
[/list]
